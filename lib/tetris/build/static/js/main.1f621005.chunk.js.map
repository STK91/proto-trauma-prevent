{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledUploadButton.js","components/UploadButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","imges/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledUploadButton","UploadButton","className","name","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offest","pox","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1f621005.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[y].length; x += 1) {\n\n            // 1. Check that we are on an actual tetromino cell\n            if (player.tetromino[y][x] !== 0) {\n                if (\n                    // 2. Check that our move is inside the game areas height (y)\n                    // we shouldn't go through the bottom of the play area \n                    !stage[y + player.pos.y + moveY] ||\n                    // 3. Check that the our move is inside the game areas width (x)\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                    // 4. Check that the cell we are moving to is not set to clear\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n}","import styled from 'styled-components';\nimport bgImage from '../../imges/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: url(${bgImage}) #000;\n    background-size: cover; \n    overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n`;","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230',\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0],\n        ],\n        color: '36, 95, 223',\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L'],\n        ],\n        color: '223, 173, 36',\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O']\n        ],\n        color: '223, 217, 36'\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0],\n        ],\n        color: '48, 211, 36',\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0],\n        ],\n        color: '132, 61, 198',\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0],\n        ],\n        color: '227, 78, 78',\n    }\n}\n\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    return TETROMINOS[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage => \n        newStage.reduce((ack, row) =>{\n            if(row.findIndex(cell => cell[0] === 0) === -1){\n                setRowsCleared(prev => prev + 1);\n                ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                return ack;\n            }\n            ack.push(row);\n            return ack;\n        }, [])\n\n\n        const updateStage = prevStage => {\n            // First flush the stage\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n            );\n\n            // Then draw the tetromino\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if (value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`\n                        ]\n                    }\n                });\n            });\n\n            // Then check if we collided\n            if(player.collided){\n                resetPlayer();\n                return sweepRows(newStage);\n            } \n\n            return newStage;\n        }\n\n        setStage(prev => updateStage(prev))\n    }, [player, resetPlayer])\n\n    return [stage, setStage, rowsCleared];\n}\n\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height}, \n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0? '0px solid' : '4px solid')};\n    border-top-color: rgba(${props => props.color}, 1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n\n`;","import React from 'react';\nimport { TETROMINOS } from '../tetrominos';\n\n// Styled Components\nimport { StyledCell } from './styles/StyledCell';\n\nconst Cell = ({ type }) => (\n<StyledCell type={ type } color={ TETROMINOS[type].color }></StyledCell>\n) \n\nexport default React.memo(Cell);\n","import React from 'react';\n\n// Styled Components\nimport { StyledStage } from './styles/StyledStage';\n\n//Components\nimport Cell from './Cell';\n\nexport default function Stage({ stage }) {\n    return (\n        <StyledStage width={stage[0].length} height={stage.length}>\n            {stage.map(row => row.map((cell, x) => <Cell key={ x } type={ cell[0] }/>))}\n        </StyledStage>\n    )\n}\n","import styled from 'styled-components';\n\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 0.8rem;\n`;","import React from 'react';\n\n// Styled Components\nimport { StyledDisplay } from './styles/StyledDisplay';\n\n\nexport default function Display({ gameOver, text }) {\n    return (\n        <StyledDisplay gameOver={gameOver}>\n            {text}\n        </StyledDisplay>\n    )\n}\n","import styled from 'styled-components';\n\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333; \n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`;","import React from 'react';\n\n// Styled Components\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nexport default function StartButton({ callback }) {\n    return (\n        <StyledStartButton onClick={ callback }>\n            Start Game\n        </StyledStartButton>\n    )\n}\n","import styled from 'styled-components';\n\n\nexport const StyledUploadButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333; \n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`;\n","import React from 'react';\n\n// Styled Components\nimport { StyledUploadButton } from './styles/StyledUploadButton';\n\nexport default function UploadButton({ callback }) {\n    return (\n        <StyledUploadButton>\n        <div className=\"form-group row\">\n        <div className=\"offset-4 col-8\">\n        <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\n            Submit\n        </button>\n        </div>\n        </div>\n        </StyledUploadButton>\n    )\n}\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport UploadButton from './UploadButton';\n\nexport default function Tetris() {\n\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rwosCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rwosCleared);\n\n\n    console.log('re-render');\n\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 })\n        }\n    }\n\n    const startGame = () => {\n        // Reset everything\n        setStage(createStage());\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n    }\n\n    const drop = () => {\n        // Increase level when play has cleared 10 rows\n        if(rows > (level + 1) * 10){\n            setLevel(prev => prev + 1);\n            // Also increase speed\n            setDropTime(1000 / (level + 1) + 200);\n        }\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n            // Game over\n            if (player.pos.y < 1) {\n                console.log(\"GAME OVER\");\n                setGameOver(true);\n                setDropTime(null);\n            }\n\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        }\n    }\n\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) {// left arrow key\n                movePlayer(-1);\n            } else if (keyCode === 39) {// right arrow key\n                movePlayer(1)\n            } else if (keyCode === 40) {// down arrow key\n                dropPlayer()\n            } else if (keyCode === 38) {// up arrow key\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n                <Stage stage={stage} />\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\" />\n                    ) : (\n                            <div>\n                                <Display text={`Score: ${score}`} />\n                                <Display text={`Rows: ${rows}`} />\n                                <Display text={`Level: ${level}`}/>\n                            </div>\n                        )}\n                    <StartButton callback={startGame} />\n                    <UploadButton />\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\n","import { useState, useCallback } from 'react';\n\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: { x: 0, y: 0},\n        tetromino: TETROMINOS[0].shape,\n        collided: false\n    });\n\n    const rotate = (matrix, dir) => {\n        // Turn the rows into cols (transpose)\n        const rotatedTetro = matrix.map((_, index) => \n        matrix.map(col => col[index]),\n        );\n\n        // Reverse each row to get a rotated matrix\n        if(dir > 0){\n            return rotatedTetro.map(row => row.reverse());\n        } \n        return rotatedTetro.reverse();\n    }\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offest = 1;\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0})){\n            clonedPlayer.pos.x += offest;\n            offest = -(offest + (offest > 0 ? 1 : -1));\n            if(offest > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pox.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n    }\n\n\n    const updatePlayerPos = ({ x, y, collided }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n            setPlayer({\n                pos: { x: STAGE_WIDTH / 2 - 2, y: 0},\n                tetromino: randomTetromino().shape,\n                collided: false,\n            })\n        }, [])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect, useCallback} from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        // Check if we have score\n        if(rowsCleared > 0){\n            // This is how original tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n\n        }\n    }, [level, linePoints, rowsCleared]);\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score])\n\n    return [score, setScore, rows, setRows, level, setLevel];\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nexport default function App() {\n  return (\n      <div className=\"App\">\n        <Tetris />\n      </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}